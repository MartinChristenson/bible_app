# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        #run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test
        
      - name: Cache
        uses: actions/cache@v3.0.5
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}
      # Installs Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: stable
      # Upgrade packages(bump major versions)
      - name: Run upgrade
        run: flutter pub upgrade --major-versions
      # Get/install packages
      - name: Run get
        run: flutter pub get
      # Run tests
      - name: Run tests
        run: flutter test
      # Captures the output of `flutter pub outdated`
      - name: Check remaining outdated packages
        id: check_outdated
        run: |
          content="$(flutter pub outdated)"
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=outdated_info::$content"
           # Opens a pull request with changes
      - name: Create Pull Request
        uses: MartinChristenson/bible_app/create-pull-request@v3
        with:
          token: ${{ secrets.PAT }}
          commit-message: Upgrade packages
          title: Upgrade packages
          body: |
            Output for outdated check following upgrades:
            ```
            ${{ steps.check_outdated.outputs.outdated_info }}
            ```
          branch: feature/update-packages
